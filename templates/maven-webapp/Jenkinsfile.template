pipeline {
  agent {
        docker {
            image 'maven:8-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }

  tools {
    maven 'maven 3'
    jdk 'java 8'
  }
  
  stages {
    stage('Build') {
      steps {
        sh 'mvn -B -DskipTests clean package'
      }
    }
    stage('Test') {
      stages {
        stage {
          parallel {
          stage('Firefox') {
            steps {
              sh 'echo \'setting up selenium environment\''
              sh 'ping -c 5 localhost'
            }
          }
          stage('Safari') {
            steps {
              sh 'echo \'setting up selenium environment\''
              sh 'ping -c 8 localhost'
            }
          }
          stage('Chrome') {
            steps {
              sh 'echo \'setting up selenium environment\''
              sh 'ping -c 3 localhost'
          }
          }
          stage('Internet Explorer') {
            steps {
              sh 'echo \'setting up selenium environment\''
              sh 'ping -c 4 localhost'
            }
          }
        }
    }
    stage('Static Analysis') {
      steps {
        sh 'mvn findbugs:findbugs'
      }
    }
    stage('Deploy') {
      parallel {
        stage('Deploy') {
          steps {
            sh 'mvn source:jar package -Dmaven.test.skip'
          }
        }
        stage('final') {
          steps {
            echo 'fdsf223'
          }
        }
      }
    }
  }

  // Steps that run after the pipeline stages complete
  post {
    always {
      junit '**/target/surefire-reports/TEST-*.xml'
      archive '**/target/*.jar'
    }
    failure {
      // The developer setting up this job can specify which group should receive an email when the build fails
      mail to: ${emailRecipient},
        subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
        body: "Something is wrong with ${env.BUILD_URL}"
      }
  }
}